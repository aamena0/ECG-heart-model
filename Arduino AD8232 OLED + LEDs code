#This code displays the ECG waveform on the OLED screen AND controls the LEDs based on the detected P-wave and QRS complex.

#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

#define OLED_MOSI 11
#define OLED_CLK 13
#define OLED_DC 8
#define OLED_CS 10
#define OLED_RESET 9

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &SPI, OLED_DC, OLED_RESET, OLED_CS);

const int ekgPin = A0;
const int LO_plus = A2;
const int LO_minus = A3;
const int SDN = 4;

const int LED_P = 6;  // LED for P-wave (SA node)
const int LED_QRS = 7; // LED for QRS complex (AV node)

float pWaveThreshold = 400;
float qrsThreshold = 600;

#define FILTER_WINDOW 5

int movingAverageFilter(int newValue) {
  static int values[FILTER_WINDOW] = {0};
  static int index = 0;
  static int sum = 0;

  sum -= values[index];
  values[index] = newValue;
  sum += values[index];
  index = (index + 1) % FILTER_WINDOW;

  return sum / FILTER_WINDOW;
}

void setup() {
  Serial.begin(9600);
  delay(4000);

  pinMode(ekgPin, INPUT);
  pinMode(LO_plus, INPUT);
  pinMode(LO_minus, INPUT);
  pinMode(SDN, OUTPUT);
  digitalWrite(SDN, HIGH);

  pinMode(LED_P, OUTPUT);
  pinMode(LED_QRS, OUTPUT);

  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    while (true);
  }
  display.clearDisplay();
  display.display();
}

void loop() {
  int sensorValue = analogRead(ekgPin);
  int filteredValue = movingAverageFilter(sensorValue);
  Serial.print("EKG Filtered Value: ");
  Serial.println(filteredValue);
  displayEKG(filteredValue);

  // LED Control Based on EKG Value
  if (filteredValue > qrsThreshold) {
    digitalWrite(LED_QRS, HIGH);
    delay(20);
    digitalWrite(LED_QRS, LOW);
  } else if (filteredValue > pWaveThreshold) {
    digitalWrite(LED_P, HIGH);
    delay(40);
    digitalWrite(LED_P, LOW);
  }

  delay(10);
}

void displayEKG(int value) {
  static int x = 0;
  static int lastY = SCREEN_HEIGHT / 2;
  int y = map(value, 200, 800, SCREEN_HEIGHT, 0);

  if (abs(y - lastY) > 20) {
    y = lastY;
  }

  display.drawLine(x, lastY, x + 1, y, WHITE);
  lastY = y;
  display.display();

  x++;
  if (x >= SCREEN_WIDTH) {
    x = 0;
    display.clearDisplay();
  }
}
